{"version":3,"sources":["fbase.js","styles/Nweet.styles.js","components/Nweet.js","styles/NweetFactory.styles.js","components/NweetFactory.js","styles/Home.styles.js","routes/Home.js","styles/AuthForm.styles.js","components/AuthForm.js","styles/Auth.styles.js","routes/Auth.js","styles/Profile.style.js","routes/Profile.js","styles/Navigation.styles.js","components/Navigation.js","styles/Router.styles.js","components/Router.js","styles/GlobalStyle.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","formBtn","css","container","formInput","NweetStyle","styled","div","NweetForm","form","NweetFormInput","input","NweetSubmitButton","NweetEditCancel","span","NweetButtonContainer","NweetContainer","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","event","preventDefault","update","type","placeholder","value","required","autoFocus","onChange","target","onClick","href","rel","src","alt","FactoryForm","FactoryInputContainer","FactoryInput","FactoryArrow","FactoryLabel","label","FactoryAttachment","FactoryClear","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","width","height","HomeContainer","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","key","authInput","AuthFormContainer","AuthFormInput","AuthFormSubmit","AuthFormError","AuthFormSwitch","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","AuthContainer","AuthBtns","AuthBtn","button","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","console","log","color","size","marginBottom","ProfileContainer","ProfileForm","ProfileFormInput","ProfileFormBtn","ProfileEditBtn","ProfileLogOutBtn","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","photoURL","userDataObj","updateProfile","userId","updatedDate","clearUserData","getUserData","where","orderBy","get","userData","userDataId","length","slice","clearArr","forEach","item","signOut","push","NavList","ul","NavNweetLink","Link","NavProfilePic","img","NavProfileLink","NavProfileName","Navigation","Provider","to","RouterWrapper","AppRouter","isLoggedIn","exact","path","Profile","GlobalStyle","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf41578e.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst formBtn = css`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 7px 20px;\r\n  text-align: center;\r\n  color: white;\r\n  border-radius: 20px;\r\n  background-color: #04aaff;\r\n`;\r\n\r\nconst container = css`\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst formInput = css`\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  border: 1px solid black;\r\n  text-align: center;\r\n  background-color: white;\r\n  color: black;\r\n`;\r\n\r\nexport const NweetStyle = styled.div`\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  width: 100%;\r\n  max-width: 320px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: rgba(0, 0, 0, 0.8);\r\n\r\n  & h4 {\r\n    font-size: 14px;\r\n  }\r\n\r\n  & img {\r\n    left: -25px;\r\n    top: -25px;\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    border: 3px solid #fff;\r\n    width: 50px;\r\n    height: 50px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const NweetForm = styled.form`\r\n  ${container}\r\n`;\r\n\r\n//className=\"formInput\"\r\nexport const NweetFormInput = styled.input`\r\n  ${formInput}\r\n`;\r\n\r\n//className=\"formBtn\"\r\nexport const NweetSubmitButton = styled.input`\r\n  ${formBtn}\r\n  margin-top: 15px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\n// className=\"formBtn cancelBtn\"\r\nexport const NweetEditCancel = styled.span`\r\n  ${formBtn}\r\n  background-color: tomato;\r\n`;\r\n\r\n//<div class=\"nweet__actions\">\r\nexport const NweetButtonContainer = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n\r\n  & span {\r\n    cursor: pointer;\r\n  }\r\n  & span:first-child {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const NweetContainer = styled.div`\r\n  word-wrap: break-word;\r\n`;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FaTrash, FaPencilAlt } from \"react-icons/fa\";\r\nimport {\r\n  NweetStyle,\r\n  NweetForm,\r\n  NweetFormInput,\r\n  NweetSubmitButton,\r\n  NweetEditCancel,\r\n  NweetButtonContainer,\r\n  NweetContainer,\r\n} from \"styles/Nweet.styles\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n  // delete tweet\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      //delete\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  return (\r\n    <NweetStyle>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <NweetForm onSubmit={onSubmit}>\r\n                <NweetFormInput\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your nweet\"\r\n                  value={newNweet}\r\n                  required\r\n                  autoFocus\r\n                  onChange={onChange}\r\n                />\r\n                <NweetSubmitButton type=\"submit\" value=\"Update Nweet\" />\r\n              </NweetForm>\r\n              <NweetEditCancel onClick={toggleEditing}>Cancel</NweetEditCancel>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <NweetContainer>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && (\r\n              <a\r\n                href={nweetObj.attachmentUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img src={nweetObj.attachmentUrl} alt=\"attachment\" />\r\n              </a>\r\n            )}\r\n            {isOwner && (\r\n              <NweetButtonContainer>\r\n                <span onClick={onDeleteClick}>\r\n                  <FaTrash />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FaPencilAlt />\r\n                </span>\r\n              </NweetButtonContainer>\r\n            )}\r\n          </NweetContainer>\r\n        </>\r\n      )}\r\n    </NweetStyle>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FactoryForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const FactoryInputContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const FactoryInput = styled.input`\r\n  flex-grow: 1;\r\n  height: 40px;\r\n  padding: 0px 20px;\r\n  color: white;\r\n  border: 1px solid #04aaff;\r\n  border-radius: 20px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const FactoryArrow = styled.input`\r\n  position: absolute;\r\n  right: 0;\r\n  background-color: #04aaff;\r\n  height: 40px;\r\n  width: 40px;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  border-radius: 20px;\r\n  color: white;\r\n`;\r\n\r\nexport const FactoryLabel = styled.label`\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n  & span {\r\n    margin-right: 10px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const FactoryAttachment = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  & img {\r\n    height: 80px;\r\n    width: 80px;\r\n    border-radius: 40px;\r\n  }\r\n`;\r\n\r\nexport const FactoryClear = styled.div`\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n  text-align: center;\r\n\r\n  & span {\r\n    margin-right: 10px;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FaPlus, FaTimes } from \"react-icons/fa\";\r\nimport {\r\n  FactoryForm,\r\n  FactoryInputContainer,\r\n  FactoryInput,\r\n  FactoryArrow,\r\n  FactoryLabel,\r\n  FactoryAttachment,\r\n  FactoryClear,\r\n} from \"styles/NweetFactory.styles\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  // save data on database on form submit\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    // making url for picture\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    // nweet obj\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    // adding nweet obj on db\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    // clear the form\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  // show what you write on text input\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  // uploading image functionality\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (theFile) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  // clear the photo\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  return (\r\n    <FactoryForm onSubmit={onSubmit}>\r\n      <FactoryInputContainer>\r\n        <FactoryInput\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind\"\r\n          maxLength={120}\r\n        />\r\n        <FactoryArrow type=\"submit\" value=\"&rarr;\" />\r\n      </FactoryInputContainer>\r\n      <FactoryLabel htmlFor=\"attach-file\">\r\n        <span>Add photos</span>\r\n        <FaPlus />\r\n      </FactoryLabel>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n\r\n      {attachment && (\r\n        <FactoryAttachment>\r\n          <img src={attachment} alt=\"pic\" width=\"50px\" height=\"50px\" />\r\n\r\n          <FactoryClear onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FaTimes />\r\n          </FactoryClear>\r\n        </FactoryAttachment>\r\n      )}\r\n    </FactoryForm>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst container = css`\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const HomeContainer = styled.div`\r\n  ${container}\r\n`;\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { HomeContainer } from \"styles/Home.styles\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  // Real time tweets\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </HomeContainer>\r\n  );\r\n};\r\nexport default Home;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst container = css`\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst authInput = css`\r\n  max-width: 320px;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 30px;\r\n  background-color: rgba(255, 255, 255, 1);\r\n  margin-bottom: 10px;\r\n  font-size: 12px;\r\n  color: black;\r\n`;\r\n\r\nexport const AuthFormContainer = styled.form`\r\n  ${container}\r\n`;\r\n\r\n//authinput\r\nexport const AuthFormInput = styled.input`\r\n  ${authInput}\r\n`;\r\n\r\n// authsubmit\r\nexport const AuthFormSubmit = styled.input`\r\n  ${authInput}\r\n  text-align: center;\r\n  background: #04aaff;\r\n  color: white;\r\n  margin-top: 10;\r\n  cursor: pointer;\r\n`;\r\n\r\n//span autherror\r\nexport const AuthFormError = styled.span`\r\n  color: tomato;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`;\r\n// authSwitch\r\nexport const AuthFormSwitch = styled.span`\r\n  color: #04aaff;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  margin-bottom: 50px;\r\n  display: block;\r\n  font-size: 12px;\r\n  text-decoration: underline;\r\n`;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  AuthFormContainer,\r\n  AuthFormInput,\r\n  AuthFormSubmit,\r\n  AuthFormError,\r\n  AuthFormSwitch,\r\n} from \"styles/AuthForm.styles\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <AuthFormContainer onSubmit={onSubmit}>\r\n        <AuthFormInput\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <AuthFormInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <AuthFormSubmit\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\r\n        />\r\n        {error && <AuthFormError>{error}</AuthFormError>}\r\n      </AuthFormContainer>\r\n      <AuthFormSwitch onClick={toggleAccount}>\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </AuthFormSwitch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const AuthBtns = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  max-width: 320px;\r\n`;\r\n\r\nexport const AuthBtn = styled.button`\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  border: none;\r\n  padding: 10px 0px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  width: 150px;\r\n  background: white;\r\n  cursor: pointer;\r\n`;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React from \"react\";\r\nimport { FaTwitter, FaGoogle, FaGithub } from \"react-icons/fa\";\r\nimport { AuthContainer, AuthBtns, AuthBtn } from \"styles/Auth.styles\";\r\n\r\nconst Auth = () => {\r\n  // OAuth\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <AuthContainer>\r\n      <FaTwitter color=\"#04AAFF\" size=\"3em\" style={{ marginBottom: 30 }} />\r\n      <AuthForm />\r\n      <AuthBtns>\r\n        <AuthBtn onClick={onSocialClick} name=\"google\">\r\n          Continue with Google <FaGoogle />\r\n        </AuthBtn>\r\n        <AuthBtn onClick={onSocialClick} name=\"github\">\r\n          Continue with Github <FaGithub />\r\n        </AuthBtn>\r\n      </AuthBtns>\r\n    </AuthContainer>\r\n  );\r\n};\r\nexport default Auth;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst container = css`\r\n  width: 100%;\r\n  max-width: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst formBtn = css`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 7px 20px;\r\n  text-align: center;\r\n  color: white;\r\n  border-radius: 20px;\r\n  background-color: #04aaff;\r\n`;\r\n\r\nexport const ProfileContainer = styled.div`\r\n  ${container}\r\n`;\r\n\r\nexport const ProfileForm = styled.form`\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.9);\r\n  padding-bottom: 30px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ProfileFormInput = styled.input`\r\n  width: 100%;\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  border: 1px solid black;\r\n  text-align: center;\r\n  background-color: white;\r\n  color: black;\r\n`;\r\n\r\nexport const ProfileFormBtn = styled.input`\r\n  ${formBtn}\r\n  margin-top:10px;\r\n`;\r\n\r\nexport const ProfileEditBtn = styled.span`\r\n  ${formBtn}\r\n`;\r\n// formbtn cancelbtn logout span\r\nexport const ProfileLogOutBtn = styled.span`\r\n  ${formBtn}\r\n  background-color: tomato;\r\n  margin-top: 10px;\r\n`;\r\n","import { authService, dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n  ProfileContainer,\r\n  ProfileForm,\r\n  ProfileFormInput,\r\n  ProfileFormBtn,\r\n  ProfileEditBtn,\r\n  ProfileLogOutBtn,\r\n} from \"styles/Profile.style\";\r\nimport { FactoryLabel } from \"styles/NweetFactory.styles\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [editing, setEditing] = useState(false); // state for editing profile\r\n  const [attachment, setAttachment] = useState(\"\"); // state for photo\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  // logout functionality\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // update value of input\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  // update profile on submit\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = userObj.photoURL;\r\n    let userDataObj = {};\r\n\r\n    // making url for picture\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n\r\n    // update profile name / photo\r\n    if (\r\n      userObj.displayName !== newDisplayName ||\r\n      userObj.photoURL !== attachmentUrl\r\n    ) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n        photoURL: attachmentUrl,\r\n      });\r\n    }\r\n\r\n    // make user data Obj for reference to delete photoURL\r\n    userDataObj = {\r\n      userId: userObj.uid,\r\n      name: newDisplayName,\r\n      photoURL: attachmentUrl,\r\n      updatedDate: Date.now(),\r\n    };\r\n\r\n    // clear userData add user data to DB\r\n    await clearUserData();\r\n    await dbService.collection(\"users\").add(userDataObj);\r\n\r\n    refreshUser();\r\n    setEditing(false);\r\n  };\r\n\r\n  // uploading image functionality\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  // get user obj to delete old photo and user obj\r\n  const getUserData = async () => {\r\n    const userData = await dbService\r\n      .collection(\"users\")\r\n      .where(\"userId\", \"==\", userObj.uid)\r\n      .orderBy(\"updatedDate\", \"desc\")\r\n      .get();\r\n    const userDataId = userData.docs.map((doc) => {\r\n      return {\r\n        id: doc.id,\r\n        attachmentUrl: doc.data().photoURL,\r\n      };\r\n    });\r\n    if (userDataId.length > 0) {\r\n      return userDataId.slice(0);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // delete obj and old photo\r\n  const clearUserData = async () => {\r\n    const clearArr = await getUserData();\r\n    if (clearArr) {\r\n      clearArr.forEach(async (item) => {\r\n        await dbService.doc(`users/${item.id}`).delete();\r\n        if (item.attachmentUrl !== \"\") {\r\n          await storageService.refFromURL(item.attachmentUrl).delete();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProfileContainer>\r\n        {editing ? (\r\n          <ProfileForm onSubmit={onSubmit}>\r\n            <ProfileFormInput\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              autoFocus\r\n              placeholder=\"Display Name\"\r\n              value={newDisplayName}\r\n            />\r\n            <FactoryLabel htmlFor=\"attach-file\">\r\n              <span>Add photos</span>\r\n              <FaPlus />\r\n            </FactoryLabel>\r\n            <input\r\n              id=\"profile-pic\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={onFileChange}\r\n              style={{ opacity: 0 }}\r\n            />\r\n            <ProfileFormBtn type=\"submit\" placeholder=\"Update Profile\" />\r\n          </ProfileForm>\r\n        ) : (\r\n          <>\r\n            <ProfileEditBtn onClick={toggleEditing}>\r\n              edit profile\r\n            </ProfileEditBtn>\r\n            <ProfileLogOutBtn onClick={onLogOutClick}>Log Out</ProfileLogOutBtn>\r\n          </>\r\n        )}\r\n      </ProfileContainer>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 50px;\r\n`;\r\n\r\nexport const NavNweetLink = styled(Link)`\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport const NavProfilePic = styled.img`\r\n  height: 3em;\r\n  width: 3em;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const NavProfileLink = styled(Link)`\r\n  margin-left: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const NavProfileName = styled.span`\r\n  margin-top: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { FaTwitter, FaUser } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport {\r\n  NavList,\r\n  NavNweetLink,\r\n  NavProfileLink,\r\n  NavProfileName,\r\n  NavProfilePic,\r\n} from \"styles/Navigation.styles\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <NavList>\r\n        <IconContext.Provider value={{ color: \"#04AAFF\", size: \"2em\" }}>\r\n          <li>\r\n            <NavNweetLink to=\"/\">\r\n              <FaTwitter />\r\n            </NavNweetLink>\r\n          </li>\r\n          <li>\r\n            <NavProfileLink to=\"/profile\">\r\n              <>\r\n                {userObj.photoURL ? (\r\n                  <NavProfilePic src={userObj.photoURL} alt=\"userProfile\" />\r\n                ) : (\r\n                  <FaUser />\r\n                )}\r\n                <NavProfileName>\r\n                  {userObj.displayName ? userObj.displayName : \"User\"}'s Profile\r\n                </NavProfileName>\r\n              </>\r\n            </NavProfileLink>\r\n          </li>\r\n        </IconContext.Provider>\r\n      </NavList>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nexport const RouterWrapper = styled.div`\r\n  max-width: 890px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 80px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport { RouterWrapper } from \"styles/Router.styles\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <RouterWrapper>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n            </RouterWrapper>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${reset}\r\n* {\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  input {\r\n    all: unset;\r\n    box-sizing: border-box;\r\n    appearance: none;\r\n  }\r\n  \r\n  body {\r\n    background-color: black;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n    font-size: 14px;\r\n    color: white;\r\n  }\r\n  \r\n  button {\r\n    background-color: white;\r\n    color: black;\r\n  }\r\n  \r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  \r\n  form {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport GlobalStyle from \"styles/GlobalStyle\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          photoURL: user.photoURL,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}